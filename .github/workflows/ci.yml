name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false 
      matrix:
        app: [frontend, backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.13.1'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install root dependencie for both frontend and backend
      - name: Install root dependencies
        run: npm ci
        working-directory: .

      # frontend Linting
      - name: Run Frontend Lint
        if: matrix.app == 'frontend'
        run: npm run lint:frontend
        working-directory: .

       # backend Linting
      - name: Run Backend Lint
        if: matrix.app == 'backend'
        run: npm run lint:backend
        working-directory: .

      - name: Run Backend Tests
        if: matrix.app == 'backend'
        run: npm run test:backend
        working-directory: .

      - name: Run Frontend Tests with Coverage
        if: matrix.app == 'frontend'
        run: npm run test:frontend
        working-directory: .

      # Build
      - name: Build Frontend App
        if: matrix.app == 'frontend'
        run: npm run build
        working-directory: .

      # Upload coverage
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-coverage
          path: coverage/lcov.info

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.13.1'

      - name: Install Sonar Scanner
        run: npm install -g sonar-scanner

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage

      - name: Debug coverage files
        continue-on-error: false
        run: |
          echo "Frontend coverage:"
          head -n 20 frontend/coverage/lcov.info || echo "Missing frontend coverage"
          echo "Backend coverage:"
          head -n 20 backend/coverage/lcov.info || echo "Missing backend coverage"

      - name: SonarCloud Scan (Frontend)
        uses: SonarSource/sonarcloud-github-action@v2
        with:
            args: >
              -Dsonar.projectKey=pavithra-employee-dashboard-frontend
              -Dsonar.organization=pavithra19m-1
              -Dsonar.projectName=Pavithra_Employee_Dashboard_Frontend
              -Dsonar.sources=frontend/src
              -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info
              -Dsonar.exclusions=**/node_modules/**,**/*.test.js,**/setupTests.js,**/reportWebVitals.js,**/config/**,**/index.js
              -Dsonar.coverage.exclusions=**/App.js,**/reportWebVitals.js
              ${{ github.event_name == 'pull_request' && format('-Dsonar.pullrequest.branch={0} -Dsonar.pullrequest.key={1} -Dsonar.pullrequest.base={2}', github.head_ref, github.event.pull_request.number, github.base_ref) || '' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Scan (Backend)
        uses: SonarSource/sonarcloud-github-action@v2
        with:
            args: >
              -Dsonar.projectKey=pavithra-employee-dashboard-backend
              -Dsonar.organization=pavithra19m-1
              -Dsonar.projectName=Pavithra_Employee_Dashboard_Backend
              -Dsonar.sources=backend
              -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info
              ${{ github.event_name == 'pull_request' && format('-Dsonar.pullrequest.branch={0} -Dsonar.pullrequest.key={1} -Dsonar.pullrequest.base={2}', github.head_ref, github.event.pull_request.number, github.base_ref) || '' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}